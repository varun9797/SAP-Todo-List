version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: todo-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-todoapp}
    ports:
      - "27018:27017"  # Use different external port to avoid conflicts
    volumes:
      - mongodb_dev_data:/data/db
      - ./backend/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - todo-network

  # Backend API (Development mode with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: todo-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/todoapp?authSource=admin
      FRONTEND_URL: http://localhost:4200
    ports:
      - "3000:3000"
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/package.json:/app/package.json:ro
      - ./backend/tsconfig.json:/app/tsconfig.json:ro
    depends_on:
      - mongodb
    networks:
      - todo-network

  # Frontend Application (Development mode with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: todo-frontend-dev
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "4200:4200"
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
      - ./frontend/angular.json:/app/angular.json:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
      - ./frontend/tsconfig.app.json:/app/tsconfig.app.json:ro
    depends_on:
      - backend
    networks:
      - todo-network

volumes:
  mongodb_dev_data:
    driver: local

networks:
  todo-network:
    driver: bridge
